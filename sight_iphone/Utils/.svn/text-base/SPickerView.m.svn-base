//
//  SPickerView.m
//  Sight
//
//  Created by fengshaobo on 15/4/27.
//  Copyright (c) 2015年 Qunar.com. All rights reserved.
//

#import "SPickerView.h"

static const CGFloat kPickerHeight = 160;
static const CGFloat kToolBarHeight = 44;
static const CGFloat kAnimationDuration = .3;

@implementation SPickerView

- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        [self setup];
    }
    return self;
}

- (void)setup
{
    self.bg = [[UIControl alloc] initWithFrame:self.bounds];
    [_bg addTarget:self action:@selector(dismiss) forControlEvents:UIControlEventTouchUpInside];
    [self.bg setBackgroundColor:[UIColor blackColor]];
    [self addSubview:_bg];
    
    self.picker = [[UIPickerView alloc] initWithFrame:CGRectMake(0, self.height - kPickerHeight, self.width, kPickerHeight)];
    self.picker.backgroundColor = [UIColor whiteColor];
    self.picker.dataSource = self;
    self.picker.delegate = self;
    [self addSubview:self.picker];
    
    self.toolBar = [[UIView alloc] initWithFrame:CGRectMake(0, self.picker.top + 44, self.width, 44)];
    self.toolBar.backgroundColor = [UIColor qunarGrayColor];
    UIButton *leftButton = [UIButton buttonWithType:UIButtonTypeCustom];
    [leftButton setFrame:CGRectMake(0, 0, 44, 44)];
    [leftButton setTag:EToolBarLeftButton];
    [leftButton setTitle:@"关闭" forState:UIControlStateNormal];
    [leftButton setTitleColor:[UIColor ssYellowColor] forState:UIControlStateNormal];
    [leftButton addTarget:self action:@selector(toolBarButtonAction:) forControlEvents:UIControlEventTouchUpInside];
    [self.toolBar addSubview:leftButton];
    
    UIButton *rightButton = [UIButton buttonWithType:UIButtonTypeCustom];
    [rightButton setFrame:CGRectMake(self.width - kToolBarHeight, 0, kToolBarHeight, kToolBarHeight)];
    [rightButton setTitle:@"完成" forState:UIControlStateNormal];
    [rightButton setTag:EToolBarRightButton];
    [rightButton setTitleColor:[UIColor ssYellowColor] forState:UIControlStateNormal];
    [rightButton addTarget:self action:@selector(toolBarButtonAction:) forControlEvents:UIControlEventTouchUpInside];
    [self.toolBar addSubview:rightButton];
    [self addSubview:self.toolBar];
    
    self.selectDict = [NSMutableDictionary dictionary];
}

- (void)toolBarButtonAction:(UIButton *)sender
{
    [self dismiss];
    
    if (EToolBarLeftButton == sender.tag) {
        self.selectDict = [NSMutableDictionary dictionary];
    }
    
    if (self.pickerViewBlock) {
        self.pickerViewBlock(self.selectDict);
    }
}

- (void)show
{
    [self.toolBar setTop:self.height + self.toolBar.height];
    [self.picker setTop:self.height + self.toolBar.height + self.picker.height];
    [self.bg setAlpha:0];
    self.hidden = NO;
    
    [UIView animateWithDuration:kAnimationDuration animations:^{
        [self.toolBar setTop:self.height - self.toolBar.height - self.picker.height];
        [self.picker setTop:self.height - self.picker.height];
        [self.bg setAlpha:0.3];
    }];
}


- (void)dismiss
{
    [UIView animateWithDuration:kAnimationDuration
                     animations:^{
                         [self.toolBar setTop:self.height + self.toolBar.height];
                         [self.picker setTop:self.height + self.toolBar.height + self.picker.height];
                         [self.bg setAlpha:0];
                     }
                     completion:^(BOOL finished) {
                         self.hidden = YES;
    }];
}

#pragma mark - UIPickerViewDelegate


- (void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component
{
    NSString *item = [[self.pickerData objectAtIndexSafe:component] objectAtIndexSafe:row];
    [self.selectDict setObjectSafe:item forKey:[NSNumber numberWithInteger:component]];
    [self.picker reloadAllComponents];
}


#pragma mark - UIPickerViewDatasource

- (UIView *)pickerView:(UIPickerView *)pickerView
            viewForRow:(NSInteger)row
          forComponent:(NSInteger)component
           reusingView:(UIView *)view {

    UILabel *pickerLabel = (UILabel *)view;
    
    if (pickerLabel == nil) {
        CGRect frame = CGRectMake(0.0, 0.0, 50, 60);
        pickerLabel = [[UILabel alloc] initWithFrame:frame];
        [pickerLabel setTextAlignment:NSTextAlignmentCenter];
        [pickerLabel setBackgroundColor:[UIColor clearColor]];
        [pickerLabel setFont:[UIFont systemFontOfSize:15.0f]];
    }
    
    NSArray *item = [self.pickerData objectAtIndexSafe:component];
    NSString *str = [item objectAtIndexSafe:row];
    pickerLabel.text = str;
    
    return pickerLabel;
    
}

- (void)setPickerData:(NSArray *)pickerData
{
    _pickerData = pickerData;
    [self.picker reloadAllComponents];
}

- (NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView
{
    return self.pickerData.count;
}

// returns the # of rows in each component..
- (NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component
{
    NSArray *item = [self.pickerData objectAtIndexSafe:component];
    return [item count];
}

@end
