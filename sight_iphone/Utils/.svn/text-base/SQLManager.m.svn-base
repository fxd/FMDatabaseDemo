//
//  SQLManager.m
//  sight_iphone
//
//  Created by fengshaobo on 15/4/7.
//  Copyright (c) 2015å¹´ fengshaobo. All rights reserved.
//

#import "SQLManager.h"
#import "DatabaseUtils.h"
#import "DatabaseConstants.h"
#import "DatabaseConstants.h"
#import "BookInfo.h"

@implementation SQLManager

+ (void)initDatabase
{
    NSArray *items = [NSArray arrayWithContentsOfFile:[[NSBundle mainBundle] pathForResource:@"rework" ofType:@"plist"]];
    
    if (items.count > 0) {
        
        NSMutableArray *array = [NSMutableArray array];
        
        for (NSDictionary *dict in items) {
            BookInfo *data = [[BookInfo alloc] init];
            data.ID = [[dict objectForKey:ColumnID] integerValue];
            data.chapter = [dict objectForKey:ColumnChapter];
            data.title = [dict objectForKey:ColumnTitle];
            data.brief = [dict objectForKey:ColumnBrief];
            data.content = [dict objectForKey:ColumnContent];
            data.isRead = [[dict objectForKey:ColumnIsRead] boolValue];
            data.isFavorite = [[dict objectForKey:ColumnIsFavorite] boolValue];
            [array addObject:data];
        }
        
        [self insertInfo:array intoTable:ReworkTable];
    }
    
}

+ (NSArray *)queryFromTable:(NSString *)table chapter:(NSString *)chapter
{
    FMDatabaseQueue *dbQueue = [DatabaseUtils databaseQueueWithName:BooksDatabase];
    
    __block NSMutableArray *array = [NSMutableArray array];
    NSString *matchString = [NSString stringWithFormat:@"%%%@%%", chapter];
    [dbQueue inDatabase:^(FMDatabase *db) {
        FMResultSet *rs = [db queryFromTable:table
                                 columnNames:nil
                                       where:[NSString stringWithFormat:@"%@ LIKE ? ", ColumnChapter]
                                   whereArgs:[NSArray arrayWithObjects:matchString, nil]
                                     orderby:nil
                                     groupby:nil
                                       limit:nil];
        
        while ([rs next]) {
            BookInfo *data = [[BookInfo alloc] init];
            data.ID = [rs intForColumn:ColumnID];
            data.chapter = [rs stringForColumn:ColumnChapter];
            data.title = [rs stringForColumn:ColumnTitle];
            data.brief = [rs stringForColumn:ColumnBrief];
            data.content = [rs stringForColumn:ColumnContent];
            data.isRead = [rs boolForColumn:ColumnIsRead];
            data.isFavorite = [rs boolForColumn:ColumnIsFavorite];
            [array addObject:data];

        }
    }];
    return array;
}

+ (NSArray *)queryFromTable:(NSString *)table from:(NSInteger)from count:(NSInteger)count
{
    FMDatabaseQueue *dbQueue = [DatabaseUtils databaseQueueWithName:BooksDatabase];
    
    __block NSMutableArray *array = [NSMutableArray array];
    [dbQueue inDatabase:^(FMDatabase *db) {
        FMResultSet *rs = [db queryFromTable:table
                                 columnNames:nil
                                       where:nil
                                   whereArgs:nil
                                     orderby:nil
                                     groupby:nil
                                       limit:[NSString stringWithFormat:@"%ld offset %ld", count, from]];
        
        while ([rs next]) {
            BookInfo *data = [[BookInfo alloc] init];
            data.ID = [rs intForColumn:ColumnID];
            data.chapter = [rs stringForColumn:ColumnChapter];
            data.title = [rs stringForColumn:ColumnTitle];
            data.brief = [rs stringForColumn:ColumnBrief];
            data.content = [rs stringForColumn:ColumnContent];
            data.isRead = [rs boolForColumn:ColumnIsRead];
            data.isFavorite = [rs boolForColumn:ColumnIsFavorite];
            [array addObject:data];
            
        }
    }];
    return array;
}

+ (void)insertInfo:(NSArray *)info intoTable:(NSString *)table
{
    FMDatabaseQueue *dbQueue = [DatabaseUtils databaseQueueWithName:BooksDatabase];
    
    [dbQueue inTransaction:^(FMDatabase *db, BOOL *rollback) {
        [db open];
        for(BookInfo *data in info) {
            if(NO == isEmptyString(data.content)) {
                NSString *sql = [NSString stringWithFormat:@"insert into %@(%@, %@, %@, %@, %@, %@, %@) values (?, ?, ?, ?, ?, ?, ?)",
                                 table,
                                 ColumnID,
                                 ColumnChapter,
                                 ColumnTitle,
                                 ColumnBrief,
                                 ColumnContent,
                                 ColumnIsRead,
                                 ColumnIsFavorite];
                
                [db executeUpdate:sql,
                 [NSNumber numberWithInteger:data.ID],
                 data.chapter,
                 data.title,
                 data.brief,
                 data.content,
                 [NSNumber numberWithBool:data.isRead],
                 [NSNumber numberWithBool:data.isFavorite]];
            }
        }
    }];
}


@end
